{"version":3,"sources":["components/ProviderCard.js","routes/Search.js","App.js","index.js"],"names":["ProviderCard","data","basic","credential","name","gender","Card","style","width","Header","ListGroup","taxonomies","map","taxonomy","Item","desc","code","addresses","address","index","address_purpose","address_1","address_2","city","state","postal_code","telephone_number","Footer","Search","useState","setCity","setState","setTaxonomy","results","setResults","handleSubmit","event","a","preventDefault","fetch","response","json","console","error","Container","onSubmit","type","value","onChange","e","target","placeholder","CardColumns","result","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPA2CeA,EAvCM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtB,EAAqCA,EAAKC,MAAlCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,KAApB,EAA0BC,OAC1B,OACE,eAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,UACE,eAACF,EAAA,EAAKG,OAAN,WACGL,EADH,IACUD,KAEV,cAACO,EAAA,EAAD,UACGT,EAAKU,WAAWC,KAAI,SAACC,GACpB,OACE,cAACH,EAAA,EAAUI,KAAX,UAAqCD,EAASE,MAAzBF,EAASG,WAKnCf,EAAKgB,UAAUL,KAAI,SAACM,EAASC,GAC5B,IACEC,EAOEF,EAPFE,gBACAC,EAMEH,EANFG,UACAC,EAKEJ,EALFI,UACAC,EAIEL,EAJFK,KACAC,EAGEN,EAHFM,MACAC,EAEEP,EAFFO,YACAC,EACER,EADFQ,iBAEF,OACE,oCACGN,EADH,IACqBC,EAClBC,EACAC,EAHH,IAGUC,EAHV,IAGkBC,EACfC,IAJWP,MAQlB,cAACb,EAAA,EAAKqB,OAAN,Q,gBCoBSC,EArDA,WACb,MAAwBC,mBAAS,IAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA0BD,mBAAS,IAAnC,mBAAOL,EAAP,KAAcO,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOhB,EAAP,KAAiBmB,EAAjB,KAEA,EAA8BH,mBAAS,IAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KAEMC,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACnBD,EAAME,iBADa,kBAGMC,MAAM,kEAAD,OACwC1B,EADxC,iBACyDU,EADzD,kBACuEC,IAJlF,cAGXgB,EAHW,gBAMEA,EAASC,OANX,cAMXA,EANW,iBAOXP,EAAWO,EAAKR,SAPL,0DASjBS,QAAQC,QATS,0DAAH,sDAalB,OACE,eAACC,EAAA,EAAD,WACE,uBAAMC,SAAUV,EAAhB,UACE,uBACEW,KAAK,OACLC,MAAOxB,EACPyB,SAAU,SAACC,GAAD,OAAOnB,EAAQmB,EAAEC,OAAOH,QAClCI,YAAY,eAEd,uBACEL,KAAK,OACLC,MAAOvB,EACPwB,SAAU,SAACC,GAAD,OAAOlB,EAASkB,EAAEC,OAAOH,QACnCI,YAAY,gBAEd,uBACEL,KAAK,OACLC,MAAOlC,EACPmC,SAAU,SAACC,GAAD,OAAOjB,EAAYiB,EAAEC,OAAOH,QACtCI,YAAY,mBAGd,wBAAQL,KAAK,SAAb,uBAEF,cAACM,EAAA,EAAD,UACGnB,EAAQrB,KAAI,SAACyC,EAAQlC,GACpB,OAAO,cAAC,EAAD,CAAclB,KAAMoD,GAAalC,YCZnCmC,EA/BH,WAeV,OACE,8BACE,cAAC,EAAD,O,MCnBNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1d2a4377.chunk.js","sourcesContent":["import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nconst ProviderCard = ({ data }) => {\r\n  const { credential, name, gender } = data.basic\r\n  return (\r\n    <Card style={{ width: '30rem' }}>\r\n      <Card.Header>\r\n        {name} {credential}\r\n      </Card.Header>\r\n      <ListGroup>\r\n        {data.taxonomies.map((taxonomy) => {\r\n          return (\r\n            <ListGroup.Item key={taxonomy.code}>{taxonomy.desc}</ListGroup.Item>\r\n          )\r\n        })}\r\n      </ListGroup>\r\n\r\n      {data.addresses.map((address, index) => {\r\n        const {\r\n          address_purpose,\r\n          address_1,\r\n          address_2,\r\n          city,\r\n          state,\r\n          postal_code,\r\n          telephone_number,\r\n        } = address\r\n        return (\r\n          <address key={index}>\r\n            {address_purpose}:{address_1}\r\n            {address_2}\r\n            {city} {state} {postal_code}\r\n            {telephone_number}\r\n          </address>\r\n        )\r\n      })}\r\n      <Card.Footer></Card.Footer>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ProviderCard\r\n","import React, { useState } from 'react'\r\nimport ProviderCard from '../components/ProviderCard'\r\nimport CardColumns from 'react-bootstrap/CardColumns'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nconst Search = () => {\r\n  const [city, setCity] = useState('')\r\n  const [state, setState] = useState('')\r\n  const [taxonomy, setTaxonomy] = useState('')\r\n\r\n  const [results, setResults] = useState([])\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const response = await fetch(\r\n        `https://npi-registry-proxy.herokuapp.com/?taxonomy_description=${taxonomy}&city=${city}&state=${state}`\r\n      )\r\n      const json = await response.json()\r\n      await setResults(json.results)\r\n    } catch {\r\n      console.error()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type='text'\r\n          value={city}\r\n          onChange={(e) => setCity(e.target.value)}\r\n          placeholder='Enter City'\r\n        />\r\n        <input\r\n          type='text'\r\n          value={state}\r\n          onChange={(e) => setState(e.target.value)}\r\n          placeholder='Enter State'\r\n        />\r\n        <input\r\n          type='text'\r\n          value={taxonomy}\r\n          onChange={(e) => setTaxonomy(e.target.value)}\r\n          placeholder='Enter Taxonomy'\r\n        />\r\n\r\n        <button type='submit'>Search</button>\r\n      </form>\r\n      <CardColumns>\r\n        {results.map((result, index) => {\r\n          return <ProviderCard data={result} key={index} />\r\n        })}\r\n      </CardColumns>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React, { useState } from 'react'\r\n// import { v4 as uuid } from 'uuid'\r\n// import SignUp from './routes/SignUp'\r\n// import SignIn from './routes/SignIn'\r\n// import SignOut from './routes/SignOut'\r\n// import Alert from './components/Alert'\r\nimport Search from './routes/Search'\r\n\r\nconst App = () => {\r\n  // const [user, setUser] = useState(null)\r\n  // const [alerts, setAlerts] = useState([])\r\n\r\n  // const createAlert = ({ message, variant }) => {\r\n  //   const id = uuid()\r\n  //   setAlerts((prev) => [...prev, { message, variant, id }])\r\n  // }\r\n\r\n  // const removeAlert = ({ id }) => {\r\n  //   setAlerts((prev) => {\r\n  //     prev.filter((alert) => alert.id !== id)\r\n  //   })\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <Search />\r\n      {/* {alerts.map((alert) => (\r\n        <Alert\r\n          key={alert.id}\r\n          message={alert.message}\r\n          variant={alert.variant}\r\n          id={alert.id}\r\n          removeAlert={removeAlert}\r\n        />\r\n      ))} */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}